{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["/**\n * FrameGrid Ghost Theme - Main JavaScript\n */\n\n// Wait for DOM to be ready\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  console.log(\"FrameGrid theme loaded\");\n\n  // Initialize any non-Alpine functionality here\n  initializeTheme();\n});\n\n/**\n * Initialize theme functionality\n */\nfunction initializeTheme() {\n  // Add any theme-specific initialization here\n\n  // Example: Smooth scrolling for anchor links\n  const anchorLinks = document.querySelectorAll('a[href^=\"#\"]');\n  anchorLinks.forEach((link) => {\n    link.addEventListener(\"click\", function (e) {\n      const target = document.querySelector(this.getAttribute(\"href\"));\n      if (target) {\n        e.preventDefault();\n        target.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"start\",\n        });\n      }\n    });\n  });\n\n  // Example: Lazy loading for images (if not using native loading=\"lazy\")\n  if (\"IntersectionObserver\" in window) {\n    const imageObserver = new IntersectionObserver((entries, observer) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          const img = entry.target;\n          if (img.dataset.src) {\n            img.src = img.dataset.src;\n            img.removeAttribute(\"data-src\");\n            observer.unobserve(img);\n          }\n        }\n      });\n    });\n\n    document.querySelectorAll(\"img[data-src]\").forEach((img) => {\n      imageObserver.observe(img);\n    });\n  }\n}\n\n/**\n * Copy to clipboard functionality (used by Alpine.js components)\n */\nwindow.copyToClipboard = function (text) {\n  if (navigator.clipboard) {\n    return navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        console.log(\"Link copied to clipboard\");\n        // You could show a toast notification here\n        return true;\n      })\n      .catch((err) => {\n        console.error(\"Failed to copy: \", err);\n        return false;\n      });\n  } else {\n    // Fallback for older browsers\n    try {\n      const textArea = document.createElement(\"textarea\");\n      textArea.value = text;\n      textArea.style.position = \"fixed\";\n      textArea.style.left = \"-999999px\";\n      textArea.style.top = \"-999999px\";\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      const result = document.execCommand(\"copy\");\n      document.body.removeChild(textArea);\n      if (result) {\n        console.log(\"Link copied to clipboard\");\n      }\n      return result;\n    } catch (err) {\n      console.error(\"Failed to copy: \", err);\n      return false;\n    }\n  }\n};\n\n/**\n * Alpine.js data and methods\n */\ndocument.addEventListener(\"alpine:init\", () => {\n  // Global Alpine.js store for theme state\n  Alpine.store(\"theme\", {\n    // Add any global theme state here\n    lightboxOpen: false,\n    currentImage: null,\n\n    openLightbox(imageSrc, imageAlt) {\n      this.currentImage = { src: imageSrc, alt: imageAlt };\n      this.lightboxOpen = true;\n      document.body.style.overflow = \"hidden\";\n    },\n\n    closeLightbox() {\n      this.lightboxOpen = false;\n      this.currentImage = null;\n      document.body.style.overflow = \"\";\n    },\n  });\n\n  // Global Alpine.js methods\n  Alpine.magic(\"clipboard\", () => {\n    return (text) => window.copyToClipboard(text);\n  });\n});\n\n/**\n * Handle keyboard events for accessibility\n */\ndocument.addEventListener(\"keydown\", function (e) {\n  // Close lightbox on Escape key\n  if (e.key === \"Escape\") {\n    const store = Alpine.store(\"theme\");\n    if (store && store.lightboxOpen) {\n      store.closeLightbox();\n    }\n  }\n});\n\n/**\n * Performance optimization: Preload critical resources\n */\nfunction preloadCriticalResources() {\n  // Preload critical CSS if not already loaded\n  const criticalCSS = document.querySelector('link[href*=\"main.css\"]');\n  if (criticalCSS && !criticalCSS.hasAttribute(\"data-preloaded\")) {\n    criticalCSS.setAttribute(\"data-preloaded\", \"true\");\n  }\n}\n\n// Initialize performance optimizations\npreloadCriticalResources();\n"],"file":"main.js"}